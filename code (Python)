import time
from colorama import Fore, Style, init

init(autoreset=True)

def start_menu():
    print("Welcome to the Number Counter!")
    input("Press Enter to start...")
    print("Ready!")

def get_stopping_number():
    user_input = input("Do you want the numbers to stop at a certain number? (yes/no): ").strip().lower()
    
    if user_input == "yes":
        try:
            stopping_number = int(input("Enter the number to stop at (e.g., 3000, 1000000): "))
            return stopping_number
        except ValueError:
            print("Invalid input. Please enter a valid number.")
            return get_stopping_number()
    elif user_input == "no":
        return float('inf')  # Represents infinity
    else:
        print("Invalid input. Please enter 'yes' or 'no'.")
        return get_stopping_number()

def format_elapsed_time(seconds):
    if seconds >= 3600:  # More than an hour
        hours = seconds // 3600
        remaining_seconds = seconds % 3600
        if remaining_seconds >= 60:  # More than a minute
            minutes = remaining_seconds // 60
            seconds = remaining_seconds % 60
            return f"{hours} hours / {minutes} minutes / {seconds:.2f} seconds"
        else:
            return f"{hours} hours / {remaining_seconds:.2f} seconds"
    elif seconds >= 60:  # More than a minute
        minutes = seconds // 60
        seconds = seconds % 60
        return f"{minutes} minutes / {seconds:.2f} seconds"
    else:
        return f"{seconds:.2f} seconds"

def main():
    # Call the start menu
    start_menu()

    # Get the stopping number from the user
    stopping_number = get_stopping_number()

    # Define the starting number
    number = 1

    # Define the delay in seconds (0.1 milliseconds is 0.0001 seconds)
    delay = 0.0001

    start_time = time.time()  # Record the start time
    numbers_generated = 0

    try:
        while True:
            if number == stopping_number:
                # Congratulations message when reaching the stopping number
                print(Fore.GREEN + Style.BRIGHT + f"Congratulations! You've reached {stopping_number} ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰" + Style.RESET_ALL)
                break
            else:
                print(number)
                numbers_generated += 1
            number += 1
            time.sleep(delay)
    except KeyboardInterrupt:
        print("\nCounting stopped by user.")

    end_time = time.time()  # Record the end time
    elapsed_time = end_time - start_time
    numbers_per_second = numbers_generated / elapsed_time
    average_numbers_per_second = numbers_generated / (number - 1)  # -1 to exclude stopping_number

    formatted_elapsed_time = format_elapsed_time(elapsed_time)

    print("\nStatistics:")
    print(Fore.YELLOW + Style.BRIGHT + f"Numbers generated per second: {numbers_per_second:.2f}" + Style.RESET_ALL)
    print(Fore.CYAN + Style.BRIGHT + f"Elapsed time (ms): {formatted_elapsed_time}" + Style.RESET_ALL)
    print(Fore.MAGENTA + Style.BRIGHT + f"Average numbers generated per second: {average_numbers_per_second:.2f}" + Style.RESET_ALL)

    input("Press Enter to exit...")  # Wait for user input before exiting

if __name__ == "__main__":
    main()
